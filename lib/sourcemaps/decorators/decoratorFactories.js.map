{"version":3,"sources":["decorators/decoratorFactories.ts"],"names":[],"mappings":"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","file":"../../decorators/decoratorFactories.js","sourcesContent":["import 'reflect-metadata';\r\nimport { stringify } from '../util/index';\r\nimport { Type } from '../type';\r\n\r\nlet _nextClassId = 0;\r\n/**\r\n * Declares the interface to be used with {@link Class}.\r\n *\r\n * @stable\r\n */\r\nexport interface ClassDefinition {\r\n    /**\r\n     * Optional argument for specifying the superclass.\r\n     */\r\n    extends?: Type<any>;\r\n\r\n    /**\r\n     * Required constructor function for a class.\r\n     *\r\n     * The function may be optionally wrapped in an `Array`, in which case additional parameter\r\n     * annotations may be specified.\r\n     * The number of arguments and the number of parameter annotations must match.\r\n     *\r\n     * See {@link Class} for example of usage.\r\n     */\r\n    constructor: Function | any[];\r\n\r\n    /**\r\n     * Other methods on the class. Note that values should have type 'Function' but TS requires\r\n     * all properties to have a narrower type than the index signature.\r\n     */\r\n    [x: string]: Type<any> | Function | any[];\r\n}\r\n\r\n/**\r\n * An interface implemented by all Angular type decorators, which allows them to be used as ES7\r\n * decorators as well as\r\n * Angular DSL syntax.\r\n *\r\n * DSL syntax:\r\n *\r\n * ```\r\n * var MyClass = ng\r\n *   .Component({...})\r\n *   .Class({...});\r\n * ```\r\n *\r\n * ES7 syntax:\r\n *\r\n * ```\r\n * @ng.Component({...})\r\n * class MyClass {...}\r\n * ```\r\n * @stable\r\n */\r\nexport interface TypeDecorator {\r\n    /**\r\n     * Invoke as ES7 decorator.\r\n     */\r\n    <T extends Type<any>>(type: T): T;\r\n\r\n    // Make TypeDecorator assignable to built-in ParameterDecorator type.\r\n    // ParameterDecorator is declared in lib.d.ts as a `declare type`\r\n    // so we cannot declare this interface as a subtype.\r\n    // see https://github.com/angular/angular/issues/3379#issuecomment-126169417\r\n    (target: Object, propertyKey?: string | symbol, parameterIndex?: number): void;\r\n\r\n    /**\r\n     * Storage for the accumulated annotations so far used by the DSL syntax.\r\n     *\r\n     * Used by {@link Class} to annotate the generated class.\r\n     */\r\n    annotations: any[];\r\n\r\n    /**\r\n     * Generate a class from the definition and annotate it with {@link TypeDecorator#annotations}.\r\n     */\r\n    Class(obj: ClassDefinition): Type<any>;\r\n}\r\n\r\nfunction extractAnnotation(annotation: any): any {\r\n    if (typeof annotation === 'function' && annotation.hasOwnProperty('annotation')) {\r\n        // it is a decorator, extract annotation\r\n        annotation = annotation.annotation;\r\n    }\r\n    return annotation;\r\n}\r\n\r\nfunction applyParams(fnOrArray: (Function | any[]), key: string): Function {\r\n    if (fnOrArray === Object || fnOrArray === String || fnOrArray === Function ||\r\n        fnOrArray === Number || fnOrArray === Array) {\r\n        throw new Error(`Can not use native ${stringify(fnOrArray)} as constructor`);\r\n    }\r\n\r\n    if (typeof fnOrArray === 'function') {\r\n        return fnOrArray;\r\n    }\r\n\r\n    if (Array.isArray(fnOrArray)) {\r\n        const annotations: any[] = fnOrArray;\r\n        const annoLength = annotations.length - 1;\r\n        const fn: Function = fnOrArray[annoLength];\r\n        if (typeof fn !== 'function') {\r\n            throw new Error(\r\n                `Last position of Class method array must be Function in key ${key} was '${stringify(fn)}'`);\r\n        }\r\n        if (annoLength !== fn.length) {\r\n            throw new Error(\r\n                `Number of annotations (${annoLength}) does not match number of arguments (${fn.length}) in the function: ${stringify(fn)}`);\r\n        }\r\n        const paramsAnnotations: any[][] = [];\r\n        for (let i = 0, ii = annotations.length - 1; i < ii; i++) {\r\n            const paramAnnotations: any[] = [];\r\n            paramsAnnotations.push(paramAnnotations);\r\n            const annotation = annotations[i];\r\n            if (Array.isArray(annotation)) {\r\n                for (let j = 0; j < annotation.length; j++) {\r\n                    paramAnnotations.push(extractAnnotation(annotation[j]));\r\n                }\r\n            } else if (typeof annotation === 'function') {\r\n                paramAnnotations.push(extractAnnotation(annotation));\r\n            } else {\r\n                paramAnnotations.push(annotation);\r\n            }\r\n        }\r\n        Reflect.defineMetadata('parameters', paramsAnnotations, fn);\r\n        return fn;\r\n    }\r\n\r\n    throw new Error(\r\n        `Only Function or Array is supported in Class definition for key '${key}' is '${stringify(fnOrArray)}'`);\r\n}\r\n\r\n/**\r\n * Provides a way for expressing ES6 classes with parameter annotations in ES5.\r\n *\r\n * ## Basic Example\r\n *\r\n * ```\r\n * var Greeter = ng.Class({\r\n *   constructor: function(name) {\r\n *     this.name = name;\r\n *   },\r\n *\r\n *   greet: function() {\r\n *     alert('Hello ' + this.name + '!');\r\n *   }\r\n * });\r\n * ```\r\n *\r\n * is equivalent to ES6:\r\n *\r\n * ```\r\n * class Greeter {\r\n *   constructor(name) {\r\n *     this.name = name;\r\n *   }\r\n *\r\n *   greet() {\r\n *     alert('Hello ' + this.name + '!');\r\n *   }\r\n * }\r\n * ```\r\n *\r\n * or equivalent to ES5:\r\n *\r\n * ```\r\n * var Greeter = function (name) {\r\n *   this.name = name;\r\n * }\r\n *\r\n * Greeter.prototype.greet = function () {\r\n *   alert('Hello ' + this.name + '!');\r\n * }\r\n * ```\r\n *\r\n * ### Example with parameter annotations\r\n *\r\n * ```\r\n * var MyService = ng.Class({\r\n *   constructor: [String, [new Optional(), Service], function(name, myService) {\r\n *     ...\r\n *   }]\r\n * });\r\n * ```\r\n *\r\n * is equivalent to ES6:\r\n *\r\n * ```\r\n * class MyService {\r\n *   constructor(name: string, @Optional() myService: Service) {\r\n *     ...\r\n *   }\r\n * }\r\n * ```\r\n *\r\n * ### Example with inheritance\r\n *\r\n * ```\r\n * var Shape = ng.Class({\r\n *   constructor: (color) {\r\n *     this.color = color;\r\n *   }\r\n * });\r\n *\r\n * var Square = ng.Class({\r\n *   extends: Shape,\r\n *   constructor: function(color, size) {\r\n *     Shape.call(this, color);\r\n *     this.size = size;\r\n *   }\r\n * });\r\n * ```\r\n * @stable\r\n */\r\nexport function Class(clsDef: ClassDefinition): Type<any> {\r\n    const constructor = applyParams(\r\n        clsDef.hasOwnProperty('constructor') ? clsDef.constructor : undefined, 'constructor');\r\n\r\n    let proto = constructor.prototype;\r\n\r\n    if (clsDef.hasOwnProperty('extends')) {\r\n        if (typeof clsDef.extends === 'function') {\r\n            (<Function>constructor).prototype = proto =\r\n                Object.create((<Function>clsDef.extends).prototype);\r\n        } else {\r\n            throw new Error(\r\n                `Class definition 'extends' property must be a constructor function was: ${stringify(clsDef.extends)}`);\r\n        }\r\n    }\r\n\r\n    for (const key in clsDef) {\r\n        if (key !== 'extends' && key !== 'prototype' && clsDef.hasOwnProperty(key)) {\r\n            proto[key] = applyParams(clsDef[key], key);\r\n        }\r\n    }\r\n\r\n    if (this && this.annotations instanceof Array) {\r\n        Reflect.defineMetadata('annotations', this.annotations, constructor);\r\n    }\r\n\r\n    const constructorName = constructor['name'];\r\n    if (!constructorName || constructorName === 'constructor') {\r\n        (constructor as any)['overriddenName'] = `class${_nextClassId++}`;\r\n    }\r\n\r\n    return <Type<any>>constructor;\r\n}\r\n\r\nexport function makeDecorator(\r\n    name: string, props: { [name: string]: any }, parentClass?: any,\r\n    chainFn: (fn: Function) => void = null): (...args: any[]) => (cls: any) => any {\r\n    const metaCtor = makeMetadataCtor([props]);\r\n\r\n    function DecoratorFactory(objOrType: any): (cls: any) => any {\r\n        if (!(Reflect && Reflect.getOwnMetadata)) {\r\n            throw 'reflect-metadata shim is required when using class decorators';\r\n        }\r\n\r\n        if (this instanceof DecoratorFactory) {\r\n            metaCtor.call(this, objOrType);\r\n            return this;\r\n        }\r\n\r\n        const annotationInstance = new (<any>DecoratorFactory)(objOrType);\r\n        const chainAnnotation =\r\n            typeof this === 'function' && Array.isArray(this.annotations) ? this.annotations : [];\r\n        chainAnnotation.push(annotationInstance);\r\n        const TypeDecorator: TypeDecorator = <TypeDecorator>function TypeDecorator(cls: Type<any>) {\r\n            const annotations = Reflect.getOwnMetadata('annotations', cls) || [];\r\n            annotations.push(annotationInstance);\r\n            Reflect.defineMetadata('annotations', annotations, cls);\r\n            return cls;\r\n        };\r\n        TypeDecorator.annotations = chainAnnotation;\r\n        TypeDecorator.Class = Class;\r\n        if (chainFn) {\r\n            chainFn(TypeDecorator);\r\n        }\r\n        return TypeDecorator;\r\n    }\r\n\r\n    if (parentClass) {\r\n        DecoratorFactory.prototype = Object.create(parentClass.prototype);\r\n    }\r\n\r\n    DecoratorFactory.prototype.toString = () => `@${name}`;\r\n    (<any>DecoratorFactory).annotationCls = DecoratorFactory;\r\n    return DecoratorFactory;\r\n}\r\n\r\nfunction makeMetadataCtor(props: ([string, any] | { [key: string]: any })[]): any {\r\n    return function ctor(...args: any[]) {\r\n        props.forEach((prop, i) => {\r\n            const argVal = args[i];\r\n            if (Array.isArray(prop)) {\r\n                // plain parameter\r\n                this[prop[0]] = argVal === undefined ? prop[1] : argVal;\r\n            } else {\r\n                for (const propName in prop) {\r\n                    this[propName] =\r\n                        argVal && argVal.hasOwnProperty(propName) ? argVal[propName] : prop[propName];\r\n                }\r\n            }\r\n        });\r\n    };\r\n}\r\n\r\nexport function makeParamDecorator(\r\n    name: string, props: ([string, any] | { [name: string]: any })[], parentClass?: any): any {\r\n    const metaCtor = makeMetadataCtor(props);\r\n    function ParamDecoratorFactory(...args: any[]): any {\r\n        if (this instanceof ParamDecoratorFactory) {\r\n            metaCtor.apply(this, args);\r\n            return this;\r\n        }\r\n        const annotationInstance = new (<any>ParamDecoratorFactory)(...args);\r\n\r\n        (<any>ParamDecorator).annotation = annotationInstance;\r\n        return ParamDecorator;\r\n\r\n        function ParamDecorator(cls: any, unusedKey: any, index: number): any {\r\n            const parameters: any[][] = Reflect.getOwnMetadata('parameters', cls) || [];\r\n\r\n            // there might be gaps if some in between parameters do not have annotations.\r\n            // we pad with nulls.\r\n            while (parameters.length <= index) {\r\n                parameters.push(null);\r\n            }\r\n\r\n            parameters[index] = parameters[index] || [];\r\n            parameters[index].push(annotationInstance);\r\n\r\n            Reflect.defineMetadata('parameters', parameters, cls);\r\n            return cls;\r\n        }\r\n    }\r\n    if (parentClass) {\r\n        ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\r\n    }\r\n    ParamDecoratorFactory.prototype.toString = () => `@${name}`;\r\n    (<any>ParamDecoratorFactory).annotationCls = ParamDecoratorFactory;\r\n    return ParamDecoratorFactory;\r\n}\r\n\r\nexport function makePropDecorator(\r\n    name: string, props: ([string, any] | { [key: string]: any })[], parentClass?: any): any {\r\n    const metaCtor = makeMetadataCtor(props);\r\n\r\n    function PropDecoratorFactory(...args: any[]): any {\r\n        if (this instanceof PropDecoratorFactory) {\r\n            metaCtor.apply(this, args);\r\n            return this;\r\n        }\r\n\r\n        const decoratorInstance = new (<any>PropDecoratorFactory)(...args);\r\n\r\n        return function PropDecorator(target: any, name: string) {\r\n            const meta = Reflect.getOwnMetadata('propMetadata', target.constructor) || {};\r\n            meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\r\n            meta[name].unshift(decoratorInstance);\r\n            Reflect.defineMetadata('propMetadata', meta, target.constructor);\r\n        };\r\n    }\r\n\r\n    if (parentClass) {\r\n        PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\r\n    }\r\n\r\n    PropDecoratorFactory.prototype.toString = () => `@${name}`;\r\n    (<any>PropDecoratorFactory).annotationCls = PropDecoratorFactory;\r\n    return PropDecoratorFactory;\r\n}\r\n"]}